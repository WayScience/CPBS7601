# Here is a simple example of a Snakemake workflow.
#
# We define three rules:
# 1) Downloading a file.
# 2) Processing the file.
# 3) All, a target rule which specifies expected files
#
# Run the snakefile with the command `snakemake --forceall --cores 1`

# Note that you can write python script directly in the snakefile
import pathlib
import pandas as pd

# Make sure the path exists to where snakemake will dump the results
output_path = pathlib.Path("snakemake_example_results")
output_path.mkdir(exist_ok=True)

# Define a rule to download a file
rule download_file:
    output: "snakemake_example_results/downloaded_example_input.csv"
    shell:
        """
        curl -o {output} https://raw.githubusercontent.com/WayScience/CPBS7601/7f138bcaffa403f6d7f9baad36cf7d8ffc039be2/lectures/4.data_wrangling/results/ttest_results_pandas.csv
        """

# Define a rule to count the number of lines in the input file
rule count_lines:
    input: "snakemake_example_results/downloaded_example_input.csv"
    output: "snakemake_example_results/downloaded_example_line_count.txt"
    run:
        example_input_df = pd.read_csv(input[0])
        line_count = example_input_df.shape[0]
        with open(output[0], "w") as output_fh:
            output_fh.write(f"{line_count}")

# Define the special "all" rule that specifies inputs
rule all:
    input:
        "snakemake_example_results/downloaded_example_input.csv",
        "snakemake_example_results/downloaded_example_line_count.txt"
    default_target: True
